name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Print environment info
        shell: bash
        run: |
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub event: ${{ github.event_name }}"
          echo "Runner OS: ${{ runner.os }}"
          ls -la

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          check-latest: true
          
      - name: Print Go version
        run: go version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
          
      - name: Print Node.js version
        run: |
          node --version
          npm --version
          
      - name: Check frontend directories
        shell: bash
        run: |
          echo "Frontend structure:"
          ls -la frontend || echo "Frontend directory not found"
          
      - name: Install frontend dependencies
        run: |
          if (Test-Path -Path "frontend/package.json") {
            cd frontend && npm install
          } else {
            echo "Frontend package.json not found, skipping npm install"
          }

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
        
      - name: Check Wails installation
        run: wails version

      - name: Build
        run: wails build
        
      - name: List build artifacts
        shell: bash
        run: |
          echo "Build artifacts:"
          ls -la build/bin || echo "No build artifacts found"
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/bin
          retention-days: 90
          if-no-files-found: warn
          
      - name: Summary
        run: |
          echo "Build completed at $(Get-Date)"
          echo "### Build Summary" | Out-File -Append -FilePath $env:GITHUB_STEP_SUMMARY
          echo "Build completed successfully." | Out-File -Append -FilePath $env:GITHUB_STEP_SUMMARY 